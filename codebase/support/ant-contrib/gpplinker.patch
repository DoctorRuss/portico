Index: src/net/sf/antcontrib/cpptasks/gcc/GccCCompiler.java
===================================================================
--- src/net/sf/antcontrib/cpptasks/gcc/GccCCompiler.java	(revision 119)
+++ src/net/sf/antcontrib/cpptasks/gcc/GccCCompiler.java	(working copy)
@@ -234,6 +234,10 @@
         return identifier;
     }
     public Linker getLinker(LinkType linkType) {
+		// derek.baum@paremus.com - return gpp linker
+		if (getCommand().equals("g++")) {
+			return GppLinker.getInstance().getLinker(linkType);
+		}
         return GccLinker.getInstance().getLinker(linkType);
     }
     public int getMaximumCommandLength() {
Index: src/net/sf/antcontrib/cpptasks/gcc/GppLinker.java
===================================================================
--- src/net/sf/antcontrib/cpptasks/gcc/GppLinker.java	(revision 119)
+++ src/net/sf/antcontrib/cpptasks/gcc/GppLinker.java	(working copy)
@@ -33,8 +33,8 @@
     protected static final String[] discardFiles = new String[0];
     protected static final String[] objFiles = new String[]{".o", ".a", ".lib",
             ".dll", ".so", ".sl"};
-    private static final GppLinker dllLinker = new GppLinker("gcc", objFiles,
-            discardFiles, "lib", ".so", false, new GppLinker("gcc", objFiles,
+    private static final GppLinker dllLinker = new GppLinker("g++", objFiles,
+            discardFiles, "lib", ".so", false, new GppLinker("g++", objFiles,
                     discardFiles, "lib", ".so", true, null));
     private final static String libPrefix = "libraries: =";
     protected static final String[] libtoolObjFiles = new String[]{".fo", ".a",
@@ -42,11 +42,11 @@
     private static String[] linkerOptions = new String[]{"-bundle", "-dylib",
             "-dynamic", "-dynamiclib", "-nostartfiles", "-nostdlib",
             "-prebind", "-s", "-static", "-shared", "-symbolic", "-Xlinker"};
-    private static final GppLinker instance = new GppLinker("gcc", objFiles,
+    private static final GppLinker instance = new GppLinker("g++", objFiles,
             discardFiles, "", "", false, null);
-    private static final GppLinker machDllLinker = new GppLinker("gcc",
+    private static final GppLinker machDllLinker = new GppLinker("g++",
             objFiles, discardFiles, "lib", ".dylib", false, null);
-    private static final GppLinker machPluginLinker = new GppLinker("gcc",
+    private static final GppLinker machPluginLinker = new GppLinker("g++",
             objFiles, discardFiles, "lib", ".bundle", false, null);
     public static GppLinker getInstance() {
         return instance;
